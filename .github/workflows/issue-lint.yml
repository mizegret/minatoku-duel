name: Issue Body Lint
on:
  issues:
    types: [opened, edited]
permissions:
  issues: write
  contents: read
jobs:
  lint-issue-body:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install dependencies
        run: |
          npm ci || npm i --no-audit --no-fund
          npx playwright install --with-deps
      - name: Save issue body
        id: save
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = context.payload.issue.body || '';
            fs.writeFileSync('issue.md', body, 'utf8');
      - name: Markdownlint
        id: md
        run: |
          set +e
          npx markdownlint-cli2 issue.md > md.out 2>&1
          echo "status=$?" >> $GITHUB_OUTPUT
      - name: Mermaid check
        id: mm
        run: |
          set +e
          node scripts/check-mermaid.mjs issue.md > mm.out 2>&1 || true
          echo "status=$?" >> $GITHUB_OUTPUT
      - name: Comment result when not OK
        if: ${{ steps.md.outputs.status != '0' || steps.mm.outputs.status != '0' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const md = fs.existsSync('md.out') ? fs.readFileSync('md.out','utf8') : '';
            const mm = fs.existsSync('mm.out') ? fs.readFileSync('mm.out','utf8') : '';
            const body = `### Issue Lint 結果\n\n- markdownlint: ${process.env.MD_STATUS}\n- mermaid: ${process.env.MM_STATUS}\n\n<details><summary>詳細</summary>\n\n#### markdownlint\n\n\n\`${md}\`\n\n#### mermaid\n\n\`${mm}\`\n\n</details>`;
            await github.rest.issues.createComment({ ...context.repo, issue_number: context.payload.issue.number, body });
            try { await github.rest.issues.addLabels({ ...context.repo, issue_number: context.payload.issue.number, labels: ['needs:markdown'] }); } catch(e) {}
        env:
          MD_STATUS: ${{ steps.md.outputs.status }}
          MM_STATUS: ${{ steps.mm.outputs.status }}
