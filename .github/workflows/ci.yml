name: CI

on:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect path changes
    runs-on: ubuntu-latest
    outputs:
      app: ${{ steps.filter.outputs.app }}
      docs_mermaid: ${{ steps.filter.outputs.docs_mermaid }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            app:
              - 'src/**'
              - 'public/index.html'
            docs_mermaid:
              - 'docs/**/*.md'
              - 'AGENTS.md'
              - 'README.md'
  node-quality:
    name: Lint / Format / Unit Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'npm'
      - name: Install deps
        run: npm ci || npm i --no-audit --no-fund
      - name: Normalize script permissions
        run: |
          chmod +x .husky/* 2>/dev/null || true
          chmod +x scripts/*.sh 2>/dev/null || true
      - name: Secret file/name guard (fast)
        run: |
          set -e
          if git ls-files | grep -E '(^|/)env(\.[a-z]+)?\.json$' -q; then
            echo "Forbidden env*.json tracked in repo" >&2; exit 1; fi
          if git ls-files 'dist/env*' | grep . -q; then
            echo "Forbidden dist/env* tracked in repo" >&2; exit 1; fi
      - name: ESLint
        run: npm run -s lint
      - name: Prettier (check)
        run: npm run -s format:check
      - name: Markdownlint
        run: npm run -s lint:md
      - name: Remark (links)
        run: npm run -s lint:md:links
      - name: Shell (syntax & optional shellcheck)
        env:
          FIX_EXEC: '1'
        run: |
          sudo apt-get update && sudo apt-get install -y shellcheck
          node scripts/check-shell.mjs $(git ls-files '*.sh' '.husky/*' | tr '\n' ' ')
      - name: Secretlint
        run: npx secretlint "**/*" --format stylish
      - name: Vitest
        run: npm run -s test

  required:
    name: Required Checks
    runs-on: ubuntu-latest
    needs: [changes, node-quality, e2e]
    steps:
      - name: Summarize dependent job results
        run: |
          echo "changes: ${{ needs.changes.result }}"
          echo "node-quality: ${{ needs.node-quality.result }}"
          echo "e2e: ${{ needs.e2e.result }}"
          if [ "${{ needs.node-quality.result }}" != "success" ]; then
            echo "node-quality failed" >&2; exit 1; fi
          # e2e job handles its own conditional run and will succeed when not required
          if [ "${{ needs.e2e.result }}" != "success" ]; then
            echo "e2e failed" >&2; exit 1; fi
  e2e:
    name: E2E (conditional)
    runs-on: ubuntu-latest
    needs: [changes, node-quality]
    steps:
      - name: Decide whether to run E2E
        id: decide
        run: |
          RUN="false"
          if [[ "${{ needs.changes.outputs.app }}" == "true" || "${{ needs.changes.outputs.docs_mermaid }}" == "true" || "${{ github.ref }}" == "refs/heads/main" ]]; then
            RUN="true"
          fi
          echo "run=${RUN}" >> "$GITHUB_OUTPUT"
          echo "E2E run? ${RUN}"
      - uses: actions/checkout@v4
        if: steps.decide.outputs.run == 'true'
        with:
          lfs: true
      - uses: actions/setup-node@v6
        if: steps.decide.outputs.run == 'true'
        with:
          node-version: '22'
          cache: 'npm'
      - name: Install deps
        if: steps.decide.outputs.run == 'true'
        run: npm ci || npm i --no-audit --no-fund
      - name: Install Playwright browsers
        if: steps.decide.outputs.run == 'true'
        run: npx playwright install --with-deps
      - name: Mermaid syntax check
        if: steps.decide.outputs.run == 'true'
        run: npm run -s lint:mermaid
      - name: Run e2e (placeholder)
        if: steps.decide.outputs.run == 'true'
        run: npm run -s test:ui
      - name: Skip E2E (not needed)
        if: steps.decide.outputs.run != 'true'
        run: echo "E2E is not required for this change; marking job success."
